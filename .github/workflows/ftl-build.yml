name: ftl-build builds
on:
  push:
    # Run on all branches and tags, but only if the ftl-build directory or the
    # workflow itself changed. This is to avoid running the workflow on
    # unrelated changes.
    # Note that including the branch filter is necessary as otherwise (paths and tags alone),
    # the workflow would not run on pushes to branches that do not have a tag sticked to them.
    tags:
      - "**"
    branches:
      - "**"
    paths:
      - 'ftl-build/**'
      - '.github/workflows/ftl-build.yml'
  workflow_dispatch:
  schedule:
    # 1:30am UTC every Sunday, has no particular significance
    - cron: "30 1 * * 0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            container: alpine:3.18
          - platform: linux/386
            container: alpine:3.18
          - platform: linux/arm/v6
            container: alpine:3.18
          - platform: linux/arm/v7
            container: alpine:3.18
          - platform: linux/arm64/v8
            container: alpine:3.18
          - platform: linux/riscv64
            container: alpine:edge
    steps:
      -
        name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      -
        name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      -
        name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(job) }}
        run: echo "$MATRIX_CONTEXT"
      -
        name: Checkout Repo
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ secrets.DOCKERHUB_NAMESPACE }}/ftl-build,enable=${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
            ghcr.io/${{ github.repository_owner }}/ftl-build,enable=${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
            foo/bar,enable=${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        # Add support for more platforms with QEMU (optional)
#        # https://github.com/docker/setup-qemu-action
#        name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build container and test-compile FTL
        uses: docker/build-push-action@v3
        with:
          context: ftl-build/${{ startsWith(matrix.container, 'alpine') && 'alpine' || 'debian' }}
          platforms: ${{ matrix.platform }}
          push: false
          target: tester
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
      -
        name: Push builder target
        uses: docker/build-push-action@v3
        with:
          context: ftl-build/${{ startsWith(matrix.container, 'alpine') && 'alpine' || 'debian' }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
          target: builder
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
