name: ftl-build builds
on:
  push:
    # Run on all branches and tags, but only if the ftl-build directory or the
    # workflow itself changed. This is to avoid running the workflow on
    # unrelated changes.
    # Note that including the branch filter is necessary as otherwise (paths and tags alone),
    # the workflow would not run on pushes to branches that do not have a tag sticked to them.
    tags:
      - "**"
    branches:
      - "**"
    paths:
      - 'ftl-build/**'
      - '.github/workflows/ftl-build.yml'
  workflow_dispatch:
  schedule:
    # 1:30am UTC every Sunday, has no particular significance
    - cron: "30 1 * * 0"

env:
  REGISTRY_IMAGE: pihole/ftl-build

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            container: alpine:3.18
          - platform: linux/386
            container: alpine:3.18
          - platform: linux/arm/v6
            container: alpine:3.18
          - platform: linux/arm/v7
            container: alpine:3.18
          - platform: linux/arm64/v8
            container: alpine:3.18
          - platform: linux/riscv64
            container: alpine:edge
    steps:
      -
        name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      -
        name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      -
        name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(job) }}
        run: echo "$MATRIX_CONTEXT"
      -
        name: Checkout Repo
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ env.REGISTRY_IMAGE }},enable=${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
            ghcr.io/${{ env.REGISTRY_IMAGE }},enable=${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
            foo/bar,enable=${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build container and test-compile FTL
        uses: docker/build-push-action@v3
        with:
          context: ftl-build/${{ startsWith(matrix.container, 'alpine') && 'alpine' || 'debian' }}
          platforms: ${{ matrix.platform }}
          push: false
          target: tester
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
      -
        name: Push builder target and push by digest
        id: build
        uses: docker/build-push-action@v3
        with:
          context: ftl-build/${{ startsWith(matrix.container, 'alpine') && 'alpine' || 'debian' }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' && github.event_name != 'workflow_dispatch' }}
          target: builder
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER=${{ matrix.container }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      -
        name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # Merge all the digests into a single file
  # If we would push immediately above, the individual runners would overwrite each other's images
  # https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  merge-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }},enable=${{ github.event_name != 'pull_request' }}
            ghcr.io/${{ env.REGISTRY_IMAGE }},enable=${{ github.event_name != 'pull_request' }}
            foo/bar,enable=${{ github.event_name == 'pull_request' }}
          # We want to tag the image with the latest tag if the workflow was triggered by a tag
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          # tags:
            # type=schedule means that a tag is applied when the workflow is triggered by a schedule event
            # type=ref,event=branch means that a tag is applied when the workflow is triggered by a push to a branch
            # type=ref,event=tag means that a tag is applied when the workflow is triggered by a push to a tag
          tags: |
            type=schedule,enable=${{ github.event_name == 'schedule' }}
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
